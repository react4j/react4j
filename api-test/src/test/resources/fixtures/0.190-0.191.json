[
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'java.lang.annotation.Documented'.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.annotation.Documented",
      "annotationType": "java.lang.annotation.Documented",
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "@interface",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.class.kindChanged",
    "description": "Class kind changed from 'enum' to '@interface'.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enum",
      "newKind": "@interface",
      "oldKind": "enum",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.class.noLongerFinal",
    "description": "Class is no longer final.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enum",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.class.noLongerImplementsInterface",
    "description": "Class no longer implements interface 'java.io.Serializable'.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enum",
      "interface": "java.io.Serializable",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.class.noLongerImplementsInterface",
    "description": "Class no longer implements interface 'java.lang.Comparable<react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode>'.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enum",
      "interface": "java.lang.Comparable<react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode>",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.class.noLongerImplementsInterface",
    "description": "Class no longer implements interface 'java.lang.constant.Constable'.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enum",
      "interface": "java.lang.constant.Constable",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.class.noLongerInheritsFromClass",
    "description": "Class no longer inherits from 'java.lang.Enum<react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode>'.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enum",
      "package": "react4j.dom.proptypes.cssPropertyTypes",
      "superClass": "java.lang.Enum<react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode>"
    }
  },
  {
    "code": "java.class.nowAbstract",
    "description": "Class is now abstract.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enum",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'java.lang.annotation.Annotation'.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enum",
      "interface": "java.lang.annotation.Annotation",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'java.lang.annotation.Documented'.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.annotation.Documented",
      "annotationType": "java.lang.annotation.Documented",
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "@interface",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.class.kindChanged",
    "description": "Class kind changed from 'enum' to '@interface'.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enum",
      "newKind": "@interface",
      "oldKind": "enum",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.class.noLongerFinal",
    "description": "Class is no longer final.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enum",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.class.noLongerImplementsInterface",
    "description": "Class no longer implements interface 'java.io.Serializable'.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enum",
      "interface": "java.io.Serializable",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.class.noLongerImplementsInterface",
    "description": "Class no longer implements interface 'java.lang.Comparable<react4j.dom.proptypes.cssPropertyTypes.Visibility>'.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enum",
      "interface": "java.lang.Comparable<react4j.dom.proptypes.cssPropertyTypes.Visibility>",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.class.noLongerImplementsInterface",
    "description": "Class no longer implements interface 'java.lang.constant.Constable'.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enum",
      "interface": "java.lang.constant.Constable",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.class.noLongerInheritsFromClass",
    "description": "Class no longer inherits from 'java.lang.Enum<react4j.dom.proptypes.cssPropertyTypes.Visibility>'.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enum",
      "package": "react4j.dom.proptypes.cssPropertyTypes",
      "superClass": "java.lang.Enum<react4j.dom.proptypes.cssPropertyTypes.Visibility>"
    }
  },
  {
    "code": "java.class.nowAbstract",
    "description": "Class is now abstract.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enum",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'java.lang.annotation.Annotation'.",
    "newElement": "@interface react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "oldElement": "enum react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enum",
      "interface": "java.lang.annotation.Annotation",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'java.lang.annotation.Documented'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.annotation.Documented",
      "annotationType": "java.lang.annotation.Documented",
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "@interface",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.kindChanged",
    "description": "Class kind changed from 'class' to '@interface'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "class",
      "newKind": "@interface",
      "oldKind": "class",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.noLongerFinal",
    "description": "Class is no longer final.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "class",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.nowAbstract",
    "description": "Class is now abstract.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "class",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'java.lang.annotation.Annotation'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "class",
      "interface": "java.lang.annotation.Annotation",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'java.lang.annotation.Documented'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.annotation.Documented",
      "annotationType": "java.lang.annotation.Documented",
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "@interface",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.kindChanged",
    "description": "Class kind changed from 'class' to '@interface'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "class",
      "newKind": "@interface",
      "oldKind": "class",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.noLongerFinal",
    "description": "Class is no longer final.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "class",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.nowAbstract",
    "description": "Class is now abstract.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "class",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'java.lang.annotation.Annotation'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "class",
      "interface": "java.lang.annotation.Annotation",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'java.lang.annotation.Documented'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.annotation.Documented",
      "annotationType": "java.lang.annotation.Documented",
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "@interface",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.kindChanged",
    "description": "Class kind changed from 'class' to '@interface'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "class",
      "newKind": "@interface",
      "oldKind": "class",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.noLongerFinal",
    "description": "Class is no longer final.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "class",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.nowAbstract",
    "description": "Class is now abstract.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "class",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'java.lang.annotation.Annotation'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "class",
      "interface": "java.lang.annotation.Annotation",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'java.lang.annotation.Documented'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.annotation.Documented",
      "annotationType": "java.lang.annotation.Documented",
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "@interface",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.kindChanged",
    "description": "Class kind changed from 'class' to '@interface'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "class",
      "newKind": "@interface",
      "oldKind": "class",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.noLongerFinal",
    "description": "Class is no longer final.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "class",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.nowAbstract",
    "description": "Class is now abstract.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "class",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'java.lang.annotation.Annotation'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "class",
      "interface": "java.lang.annotation.Annotation",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'java.lang.annotation.Documented'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.InputType",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.annotation.Documented",
      "annotationType": "java.lang.annotation.Documented",
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "@interface",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.kindChanged",
    "description": "Class kind changed from 'class' to '@interface'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.InputType",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "class",
      "newKind": "@interface",
      "oldKind": "class",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.noLongerFinal",
    "description": "Class is no longer final.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.InputType",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "class",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.nowAbstract",
    "description": "Class is now abstract.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.InputType",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "class",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'java.lang.annotation.Annotation'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.InputType",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "class",
      "interface": "java.lang.annotation.Annotation",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'java.lang.annotation.Documented'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.OnOff",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.annotation.Documented",
      "annotationType": "java.lang.annotation.Documented",
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "@interface",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.kindChanged",
    "description": "Class kind changed from 'class' to '@interface'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.OnOff",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "class",
      "newKind": "@interface",
      "oldKind": "class",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.noLongerFinal",
    "description": "Class is no longer final.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.OnOff",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "class",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.nowAbstract",
    "description": "Class is now abstract.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.OnOff",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "class",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'java.lang.annotation.Annotation'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.OnOff",
    "oldElement": "class react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "class",
      "interface": "java.lang.annotation.Annotation",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'java.lang.annotation.Documented'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.Target",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.annotation.Documented",
      "annotationType": "java.lang.annotation.Documented",
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "@interface",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.kindChanged",
    "description": "Class kind changed from 'enum' to '@interface'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.Target",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "enum",
      "newKind": "@interface",
      "oldKind": "enum",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.noLongerFinal",
    "description": "Class is no longer final.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.Target",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "enum",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.noLongerImplementsInterface",
    "description": "Class no longer implements interface 'java.io.Serializable'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.Target",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "enum",
      "interface": "java.io.Serializable",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.noLongerImplementsInterface",
    "description": "Class no longer implements interface 'java.lang.Comparable<react4j.dom.proptypes.html.attributeTypes.Target>'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.Target",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "enum",
      "interface": "java.lang.Comparable<react4j.dom.proptypes.html.attributeTypes.Target>",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.noLongerImplementsInterface",
    "description": "Class no longer implements interface 'java.lang.constant.Constable'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.Target",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "enum",
      "interface": "java.lang.constant.Constable",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.noLongerInheritsFromClass",
    "description": "Class no longer inherits from 'java.lang.Enum<react4j.dom.proptypes.html.attributeTypes.Target>'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.Target",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "enum",
      "package": "react4j.dom.proptypes.html.attributeTypes",
      "superClass": "java.lang.Enum<react4j.dom.proptypes.html.attributeTypes.Target>"
    }
  },
  {
    "code": "java.class.nowAbstract",
    "description": "Class is now abstract.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.Target",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "enum",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'java.lang.annotation.Annotation'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.Target",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "enum",
      "interface": "java.lang.annotation.Annotation",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'java.lang.annotation.Documented'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.YesNo",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "EQUIVALENT"
    },
    "attachments": {
      "annotation": "@java.lang.annotation.Documented",
      "annotationType": "java.lang.annotation.Documented",
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "@interface",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.kindChanged",
    "description": "Class kind changed from 'enum' to '@interface'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.YesNo",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "enum",
      "newKind": "@interface",
      "oldKind": "enum",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.noLongerFinal",
    "description": "Class is no longer final.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.YesNo",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "enum",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.noLongerImplementsInterface",
    "description": "Class no longer implements interface 'java.io.Serializable'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.YesNo",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "enum",
      "interface": "java.io.Serializable",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.noLongerImplementsInterface",
    "description": "Class no longer implements interface 'java.lang.Comparable<react4j.dom.proptypes.html.attributeTypes.YesNo>'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.YesNo",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "enum",
      "interface": "java.lang.Comparable<react4j.dom.proptypes.html.attributeTypes.YesNo>",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.noLongerImplementsInterface",
    "description": "Class no longer implements interface 'java.lang.constant.Constable'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.YesNo",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "enum",
      "interface": "java.lang.constant.Constable",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.noLongerInheritsFromClass",
    "description": "Class no longer inherits from 'java.lang.Enum<react4j.dom.proptypes.html.attributeTypes.YesNo>'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.YesNo",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "enum",
      "package": "react4j.dom.proptypes.html.attributeTypes",
      "superClass": "java.lang.Enum<react4j.dom.proptypes.html.attributeTypes.YesNo>"
    }
  },
  {
    "code": "java.class.nowAbstract",
    "description": "Class is now abstract.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.YesNo",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "enum",
      "newModifiers": "public abstract",
      "oldModifiers": "public final",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'java.lang.annotation.Annotation'.",
    "newElement": "@interface react4j.dom.proptypes.html.attributeTypes.YesNo",
    "oldElement": "enum react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "enum",
      "interface": "java.lang.annotation.Annotation",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value 'backwards'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode.backwards",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enumConstant",
      "fieldName": "backwards",
      "package": "react4j.dom.proptypes.cssPropertyTypes",
      "value": "backwards"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode.backwards",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enumConstant",
      "fieldName": "backwards",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value 'both'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode.both",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enumConstant",
      "fieldName": "both",
      "package": "react4j.dom.proptypes.cssPropertyTypes",
      "value": "both"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode.both",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enumConstant",
      "fieldName": "both",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value 'forwards'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode.forwards",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enumConstant",
      "fieldName": "forwards",
      "package": "react4j.dom.proptypes.cssPropertyTypes",
      "value": "forwards"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode.forwards",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enumConstant",
      "fieldName": "forwards",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value 'inherit'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode.inherit",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enumConstant",
      "fieldName": "inherit",
      "package": "react4j.dom.proptypes.cssPropertyTypes",
      "value": "inherit"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode.inherit",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enumConstant",
      "fieldName": "inherit",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value 'initial'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode.initial",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enumConstant",
      "fieldName": "initial",
      "package": "react4j.dom.proptypes.cssPropertyTypes",
      "value": "initial"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode.initial",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enumConstant",
      "fieldName": "initial",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value 'none'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode.none",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enumConstant",
      "fieldName": "none",
      "package": "react4j.dom.proptypes.cssPropertyTypes",
      "value": "none"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode.none",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "enumConstant",
      "fieldName": "none",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value 'collapse'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.Visibility.collapse",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enumConstant",
      "fieldName": "collapse",
      "package": "react4j.dom.proptypes.cssPropertyTypes",
      "value": "collapse"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.cssPropertyTypes.Visibility' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.Visibility.collapse",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enumConstant",
      "fieldName": "collapse",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value 'hidden'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.Visibility.hidden",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enumConstant",
      "fieldName": "hidden",
      "package": "react4j.dom.proptypes.cssPropertyTypes",
      "value": "hidden"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.cssPropertyTypes.Visibility' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.Visibility.hidden",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enumConstant",
      "fieldName": "hidden",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value 'inherit'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.Visibility.inherit",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enumConstant",
      "fieldName": "inherit",
      "package": "react4j.dom.proptypes.cssPropertyTypes",
      "value": "inherit"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.cssPropertyTypes.Visibility' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.Visibility.inherit",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enumConstant",
      "fieldName": "inherit",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value 'initial'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.Visibility.initial",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enumConstant",
      "fieldName": "initial",
      "package": "react4j.dom.proptypes.cssPropertyTypes",
      "value": "initial"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.cssPropertyTypes.Visibility' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.Visibility.initial",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enumConstant",
      "fieldName": "initial",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value 'visible'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.Visibility.visible",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enumConstant",
      "fieldName": "visible",
      "package": "react4j.dom.proptypes.cssPropertyTypes",
      "value": "visible"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.cssPropertyTypes.Visibility' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.cssPropertyTypes.Visibility.visible",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "enumConstant",
      "fieldName": "visible",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value '_blank'.",
    "element": "field react4j.dom.proptypes.html.attributeTypes.Target.blank",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "enumConstant",
      "fieldName": "blank",
      "package": "react4j.dom.proptypes.html.attributeTypes",
      "value": "_blank"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.html.attributeTypes.Target' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.html.attributeTypes.Target.blank",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "enumConstant",
      "fieldName": "blank",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.html.attributeTypes.Target",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value '_parent'.",
    "element": "field react4j.dom.proptypes.html.attributeTypes.Target.parent",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "enumConstant",
      "fieldName": "parent",
      "package": "react4j.dom.proptypes.html.attributeTypes",
      "value": "_parent"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.html.attributeTypes.Target' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.html.attributeTypes.Target.parent",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "enumConstant",
      "fieldName": "parent",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.html.attributeTypes.Target",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value '_self'.",
    "element": "field react4j.dom.proptypes.html.attributeTypes.Target.self",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "enumConstant",
      "fieldName": "self",
      "package": "react4j.dom.proptypes.html.attributeTypes",
      "value": "_self"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.html.attributeTypes.Target' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.html.attributeTypes.Target.self",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "enumConstant",
      "fieldName": "self",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.html.attributeTypes.Target",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value '_top'.",
    "element": "field react4j.dom.proptypes.html.attributeTypes.Target.top",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "enumConstant",
      "fieldName": "top",
      "package": "react4j.dom.proptypes.html.attributeTypes",
      "value": "_top"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.html.attributeTypes.Target' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.html.attributeTypes.Target.top",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "enumConstant",
      "fieldName": "top",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.html.attributeTypes.Target",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value 'no'.",
    "element": "field react4j.dom.proptypes.html.attributeTypes.YesNo.no",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "enumConstant",
      "fieldName": "no",
      "package": "react4j.dom.proptypes.html.attributeTypes",
      "value": "no"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.html.attributeTypes.YesNo' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.html.attributeTypes.YesNo.no",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "enumConstant",
      "fieldName": "no",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.field.nowConstant",
    "description": "Field now declares a compile time constant value 'yes'.",
    "element": "field react4j.dom.proptypes.html.attributeTypes.YesNo.yes",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "enumConstant",
      "fieldName": "yes",
      "package": "react4j.dom.proptypes.html.attributeTypes",
      "value": "yes"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'react4j.dom.proptypes.html.attributeTypes.YesNo' to 'java.lang.String'.",
    "element": "field react4j.dom.proptypes.html.attributeTypes.YesNo.yes",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "enumConstant",
      "fieldName": "yes",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method boolean java.lang.annotation.Annotation::equals(java.lang.Object) @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "oldElement": "method boolean java.lang.Object::equals(java.lang.Object) @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "equals",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method boolean java.lang.annotation.Annotation::equals(java.lang.Object) @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "oldElement": "method boolean java.lang.Object::equals(java.lang.Object) @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "equals",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method boolean java.lang.annotation.Annotation::equals(java.lang.Object) @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "oldElement": "method boolean java.lang.Object::equals(java.lang.Object) @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "method",
      "methodName": "equals",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method boolean java.lang.annotation.Annotation::equals(java.lang.Object) @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "oldElement": "method boolean java.lang.Object::equals(java.lang.Object) @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "method",
      "methodName": "equals",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method boolean java.lang.annotation.Annotation::equals(java.lang.Object) @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "oldElement": "method boolean java.lang.Object::equals(java.lang.Object) @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "method",
      "methodName": "equals",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method boolean java.lang.annotation.Annotation::equals(java.lang.Object) @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "oldElement": "method boolean java.lang.Object::equals(java.lang.Object) @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "method",
      "methodName": "equals",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method boolean java.lang.annotation.Annotation::equals(java.lang.Object) @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "oldElement": "method boolean java.lang.Object::equals(java.lang.Object) @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "method",
      "methodName": "equals",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method boolean java.lang.annotation.Annotation::equals(java.lang.Object) @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "oldElement": "method boolean java.lang.Object::equals(java.lang.Object) @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "method",
      "methodName": "equals",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method boolean java.lang.annotation.Annotation::equals(java.lang.Object) @ react4j.dom.proptypes.html.attributeTypes.Target",
    "oldElement": "method boolean java.lang.Object::equals(java.lang.Object) @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "equals",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method boolean java.lang.annotation.Annotation::equals(java.lang.Object) @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "oldElement": "method boolean java.lang.Object::equals(java.lang.Object) @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "equals",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jdk.internal.vm.annotation.IntrinsicCandidate'.",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jdk.internal.vm.annotation.IntrinsicCandidate",
      "annotationType": "jdk.internal.vm.annotation.IntrinsicCandidate",
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "hashCode",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "hashCode",
      "newModifiers": "public abstract",
      "oldModifiers": "public native",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jdk.internal.vm.annotation.IntrinsicCandidate'.",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jdk.internal.vm.annotation.IntrinsicCandidate",
      "annotationType": "jdk.internal.vm.annotation.IntrinsicCandidate",
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "hashCode",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "hashCode",
      "newModifiers": "public abstract",
      "oldModifiers": "public native",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jdk.internal.vm.annotation.IntrinsicCandidate'.",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jdk.internal.vm.annotation.IntrinsicCandidate",
      "annotationType": "jdk.internal.vm.annotation.IntrinsicCandidate",
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "method",
      "methodName": "hashCode",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "method",
      "methodName": "hashCode",
      "newModifiers": "public abstract",
      "oldModifiers": "public native",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jdk.internal.vm.annotation.IntrinsicCandidate'.",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jdk.internal.vm.annotation.IntrinsicCandidate",
      "annotationType": "jdk.internal.vm.annotation.IntrinsicCandidate",
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "method",
      "methodName": "hashCode",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "method",
      "methodName": "hashCode",
      "newModifiers": "public abstract",
      "oldModifiers": "public native",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jdk.internal.vm.annotation.IntrinsicCandidate'.",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jdk.internal.vm.annotation.IntrinsicCandidate",
      "annotationType": "jdk.internal.vm.annotation.IntrinsicCandidate",
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "method",
      "methodName": "hashCode",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "method",
      "methodName": "hashCode",
      "newModifiers": "public abstract",
      "oldModifiers": "public native",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jdk.internal.vm.annotation.IntrinsicCandidate'.",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jdk.internal.vm.annotation.IntrinsicCandidate",
      "annotationType": "jdk.internal.vm.annotation.IntrinsicCandidate",
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "method",
      "methodName": "hashCode",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "method",
      "methodName": "hashCode",
      "newModifiers": "public abstract",
      "oldModifiers": "public native",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jdk.internal.vm.annotation.IntrinsicCandidate'.",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jdk.internal.vm.annotation.IntrinsicCandidate",
      "annotationType": "jdk.internal.vm.annotation.IntrinsicCandidate",
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "method",
      "methodName": "hashCode",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "method",
      "methodName": "hashCode",
      "newModifiers": "public abstract",
      "oldModifiers": "public native",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jdk.internal.vm.annotation.IntrinsicCandidate'.",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jdk.internal.vm.annotation.IntrinsicCandidate",
      "annotationType": "jdk.internal.vm.annotation.IntrinsicCandidate",
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "method",
      "methodName": "hashCode",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "method",
      "methodName": "hashCode",
      "newModifiers": "public abstract",
      "oldModifiers": "public native",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jdk.internal.vm.annotation.IntrinsicCandidate'.",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.html.attributeTypes.Target",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jdk.internal.vm.annotation.IntrinsicCandidate",
      "annotationType": "jdk.internal.vm.annotation.IntrinsicCandidate",
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "hashCode",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.html.attributeTypes.Target",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "hashCode",
      "newModifiers": "public abstract",
      "oldModifiers": "public native",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'jdk.internal.vm.annotation.IntrinsicCandidate'.",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jdk.internal.vm.annotation.IntrinsicCandidate",
      "annotationType": "jdk.internal.vm.annotation.IntrinsicCandidate",
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "hashCode",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method int java.lang.annotation.Annotation::hashCode() @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "oldElement": "method int java.lang.Object::hashCode() @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "hashCode",
      "newModifiers": "public abstract",
      "oldModifiers": "public native",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.abstractMethodAdded",
    "description": "Abstract method was added.",
    "newElement": "method java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.annotation.Annotation::annotationType() @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "annotationType",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.abstractMethodAdded",
    "description": "Abstract method was added.",
    "newElement": "method java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.annotation.Annotation::annotationType() @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "annotationType",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.abstractMethodAdded",
    "description": "Abstract method was added.",
    "newElement": "method java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.annotation.Annotation::annotationType() @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "method",
      "methodName": "annotationType",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.abstractMethodAdded",
    "description": "Abstract method was added.",
    "newElement": "method java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.annotation.Annotation::annotationType() @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "method",
      "methodName": "annotationType",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.abstractMethodAdded",
    "description": "Abstract method was added.",
    "newElement": "method java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.annotation.Annotation::annotationType() @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "method",
      "methodName": "annotationType",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.abstractMethodAdded",
    "description": "Abstract method was added.",
    "newElement": "method java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.annotation.Annotation::annotationType() @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "method",
      "methodName": "annotationType",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.abstractMethodAdded",
    "description": "Abstract method was added.",
    "newElement": "method java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.annotation.Annotation::annotationType() @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "method",
      "methodName": "annotationType",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.abstractMethodAdded",
    "description": "Abstract method was added.",
    "newElement": "method java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.annotation.Annotation::annotationType() @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "method",
      "methodName": "annotationType",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.abstractMethodAdded",
    "description": "Abstract method was added.",
    "newElement": "method java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.annotation.Annotation::annotationType() @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "annotationType",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.abstractMethodAdded",
    "description": "Abstract method was added.",
    "newElement": "method java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.annotation.Annotation::annotationType() @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "annotationType",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method java.lang.String java.lang.annotation.Annotation::toString() @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "oldElement": "method java.lang.String java.lang.Object::toString() @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "toString",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method java.lang.String java.lang.annotation.Annotation::toString() @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "oldElement": "method java.lang.String java.lang.Object::toString() @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "toString",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method java.lang.String java.lang.annotation.Annotation::toString() @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "oldElement": "method java.lang.String java.lang.Object::toString() @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "method",
      "methodName": "toString",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method java.lang.String java.lang.annotation.Annotation::toString() @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "oldElement": "method java.lang.String java.lang.Object::toString() @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "method",
      "methodName": "toString",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method java.lang.String java.lang.annotation.Annotation::toString() @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "oldElement": "method java.lang.String java.lang.Object::toString() @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "method",
      "methodName": "toString",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method java.lang.String java.lang.annotation.Annotation::toString() @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "oldElement": "method java.lang.String java.lang.Object::toString() @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "method",
      "methodName": "toString",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method java.lang.String java.lang.annotation.Annotation::toString() @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "oldElement": "method java.lang.String java.lang.Object::toString() @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "method",
      "methodName": "toString",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method java.lang.String java.lang.annotation.Annotation::toString() @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "oldElement": "method java.lang.String java.lang.Object::toString() @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "method",
      "methodName": "toString",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method java.lang.String java.lang.annotation.Annotation::toString() @ react4j.dom.proptypes.html.attributeTypes.Target",
    "oldElement": "method java.lang.String java.lang.Object::toString() @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "toString",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.nowAbstract",
    "description": "Method now abstract",
    "newElement": "method java.lang.String java.lang.annotation.Annotation::toString() @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "oldElement": "method java.lang.String java.lang.Object::toString() @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "toString",
      "newModifiers": "public abstract",
      "oldModifiers": "public",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method <T extends java.lang.Enum<T extends java.lang.Enum<T>>> T java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::valueOf(java.lang.Class<T>, java.lang.String) @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "valueOf",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method <T extends java.lang.Enum<T extends java.lang.Enum<T>>> T java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::valueOf(java.lang.Class<T>, java.lang.String) @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "valueOf",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method <T extends java.lang.Enum<T extends java.lang.Enum<T>>> T java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::valueOf(java.lang.Class<T>, java.lang.String) @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "valueOf",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method <T extends java.lang.Enum<T extends java.lang.Enum<T>>> T java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::valueOf(java.lang.Class<T>, java.lang.String) @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "valueOf",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method int java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::compareTo(E) @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "compareTo",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method int java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::compareTo(E) @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "compareTo",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method int java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::compareTo(E) @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "compareTo",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method int java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::compareTo(E) @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "compareTo",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method int java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::ordinal() @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "ordinal",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method int java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::ordinal() @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "ordinal",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method int java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::ordinal() @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "ordinal",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method int java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::ordinal() @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "ordinal",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Class<?> java.lang.Object::getClass() @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "getClass",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Class<?> java.lang.Object::getClass() @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "getClass",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Class<?> java.lang.Object::getClass() @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "method",
      "methodName": "getClass",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Class<?> java.lang.Object::getClass() @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "method",
      "methodName": "getClass",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Class<?> java.lang.Object::getClass() @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "method",
      "methodName": "getClass",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Class<?> java.lang.Object::getClass() @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "method",
      "methodName": "getClass",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Class<?> java.lang.Object::getClass() @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "method",
      "methodName": "getClass",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Class<?> java.lang.Object::getClass() @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "method",
      "methodName": "getClass",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Class<?> java.lang.Object::getClass() @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "getClass",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Class<?> java.lang.Object::getClass() @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "getClass",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Class<E> java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::getDeclaringClass() @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "getDeclaringClass",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Class<E> java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::getDeclaringClass() @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "getDeclaringClass",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Class<E> java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::getDeclaringClass() @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "getDeclaringClass",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Class<E> java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::getDeclaringClass() @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "getDeclaringClass",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Object java.lang.Object::clone() throws java.lang.CloneNotSupportedException @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "clone",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Object java.lang.Object::clone() throws java.lang.CloneNotSupportedException @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "clone",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Object java.lang.Object::clone() throws java.lang.CloneNotSupportedException @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "method",
      "methodName": "clone",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Object java.lang.Object::clone() throws java.lang.CloneNotSupportedException @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "method",
      "methodName": "clone",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Object java.lang.Object::clone() throws java.lang.CloneNotSupportedException @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "method",
      "methodName": "clone",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Object java.lang.Object::clone() throws java.lang.CloneNotSupportedException @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "method",
      "methodName": "clone",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Object java.lang.Object::clone() throws java.lang.CloneNotSupportedException @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "method",
      "methodName": "clone",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Object java.lang.Object::clone() throws java.lang.CloneNotSupportedException @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "method",
      "methodName": "clone",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Object java.lang.Object::clone() throws java.lang.CloneNotSupportedException @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "clone",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.Object java.lang.Object::clone() throws java.lang.CloneNotSupportedException @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "clone",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.String java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::name() @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "name",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.String java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::name() @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "name",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.String java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::name() @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "name",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.String java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::name() @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "name",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.String react4j.dom.proptypes.html.attributeTypes.Target::getValue()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "getValue",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.util.Optional<java.lang.Enum.EnumDesc<E>> java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::describeConstable() @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "describeConstable",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.util.Optional<java.lang.Enum.EnumDesc<E>> java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::describeConstable() @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "describeConstable",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.util.Optional<java.lang.Enum.EnumDesc<E>> java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::describeConstable() @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "describeConstable",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.util.Optional<java.lang.Enum.EnumDesc<E>> java.lang.Enum<E extends java.lang.Enum<E extends java.lang.Enum<E>>>::describeConstable() @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "describeConstable",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode::valueOf(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "valueOf",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode[] react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode::values()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "values",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method react4j.dom.proptypes.cssPropertyTypes.Visibility react4j.dom.proptypes.cssPropertyTypes.Visibility::valueOf(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "valueOf",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method react4j.dom.proptypes.cssPropertyTypes.Visibility[] react4j.dom.proptypes.cssPropertyTypes.Visibility::values()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "values",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method react4j.dom.proptypes.html.FormProps react4j.dom.proptypes.html.FormProps::formTarget(react4j.dom.proptypes.html.attributeTypes.Target)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.FormProps",
      "classSimpleName": "FormProps",
      "elementKind": "method",
      "methodName": "formTarget",
      "package": "react4j.dom.proptypes.html"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method react4j.dom.proptypes.html.attributeTypes.Target react4j.dom.proptypes.html.attributeTypes.Target::valueOf(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "valueOf",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method react4j.dom.proptypes.html.attributeTypes.Target[] react4j.dom.proptypes.html.attributeTypes.Target::values()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "values",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method react4j.dom.proptypes.html.attributeTypes.YesNo react4j.dom.proptypes.html.attributeTypes.YesNo::valueOf(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "valueOf",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method react4j.dom.proptypes.html.attributeTypes.YesNo[] react4j.dom.proptypes.html.attributeTypes.YesNo::values()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "values",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::finalize() throws java.lang.Throwable @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "finalize",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::finalize() throws java.lang.Throwable @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "finalize",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::finalize() throws java.lang.Throwable @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "method",
      "methodName": "finalize",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::finalize() throws java.lang.Throwable @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "method",
      "methodName": "finalize",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::finalize() throws java.lang.Throwable @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "method",
      "methodName": "finalize",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::finalize() throws java.lang.Throwable @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "method",
      "methodName": "finalize",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::finalize() throws java.lang.Throwable @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "method",
      "methodName": "finalize",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::finalize() throws java.lang.Throwable @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "method",
      "methodName": "finalize",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::finalize() throws java.lang.Throwable @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "finalize",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::finalize() throws java.lang.Throwable @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "finalize",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notify() @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "notify",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notify() @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "notify",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notify() @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "method",
      "methodName": "notify",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notify() @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "method",
      "methodName": "notify",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notify() @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "method",
      "methodName": "notify",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notify() @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "method",
      "methodName": "notify",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notify() @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "method",
      "methodName": "notify",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notify() @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "method",
      "methodName": "notify",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notify() @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "notify",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notify() @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "notify",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notifyAll() @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "notifyAll",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notifyAll() @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "notifyAll",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notifyAll() @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "method",
      "methodName": "notifyAll",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notifyAll() @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "method",
      "methodName": "notifyAll",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notifyAll() @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "method",
      "methodName": "notifyAll",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notifyAll() @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "method",
      "methodName": "notifyAll",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notifyAll() @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "method",
      "methodName": "notifyAll",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notifyAll() @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "method",
      "methodName": "notifyAll",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notifyAll() @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "notifyAll",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::notifyAll() @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "notifyAll",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait() throws java.lang.InterruptedException @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait() throws java.lang.InterruptedException @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait() throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait() throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait() throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait() throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait() throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait() throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait() throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait() throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long) throws java.lang.InterruptedException @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long) throws java.lang.InterruptedException @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long) throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long) throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long) throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long) throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long) throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long) throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long) throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long) throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long, int) throws java.lang.InterruptedException @ react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classSimpleName": "AnimationFillMode",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long, int) throws java.lang.InterruptedException @ react4j.dom.proptypes.cssPropertyTypes.Visibility",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classSimpleName": "Visibility",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.cssPropertyTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long, int) throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.AudioPreload",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classSimpleName": "AudioPreload",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long, int) throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.ButtonType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classSimpleName": "ButtonType",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long, int) throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.FormMethod",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classSimpleName": "FormMethod",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long, int) throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.HeaderScope",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classSimpleName": "HeaderScope",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long, int) throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.InputType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classSimpleName": "InputType",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long, int) throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.OnOff",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classSimpleName": "OnOff",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long, int) throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.Target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classSimpleName": "Target",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void java.lang.Object::wait(long, int) throws java.lang.InterruptedException @ react4j.dom.proptypes.html.attributeTypes.YesNo",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classSimpleName": "YesNo",
      "elementKind": "method",
      "methodName": "wait",
      "package": "react4j.dom.proptypes.html.attributeTypes"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.AnchorProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.AnchorProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.AnchorProps",
      "classSimpleName": "AnchorProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.AudioProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.AudioProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.AudioProps",
      "classSimpleName": "AudioProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.BtnProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.BtnProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.BtnProps",
      "classSimpleName": "BtnProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.ColProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.ColProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.ColProps",
      "classSimpleName": "ColProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.FormProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.FormProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.FormProps",
      "classSimpleName": "FormProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.HtmlProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.HtmlProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.HtmlProps",
      "classSimpleName": "HtmlProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.IFrameProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.IFrameProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.IFrameProps",
      "classSimpleName": "IFrameProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.ImgProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.ImgProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.ImgProps",
      "classSimpleName": "ImgProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.InputProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.InputProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.InputProps",
      "classSimpleName": "InputProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.LabelProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.LabelProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.LabelProps",
      "classSimpleName": "LabelProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.OptGroupProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.OptGroupProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.OptGroupProps",
      "classSimpleName": "OptGroupProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.OptionProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.OptionProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.OptionProps",
      "classSimpleName": "OptionProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.SelectProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.SelectProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.SelectProps",
      "classSimpleName": "SelectProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.SourceProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.SourceProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.SourceProps",
      "classSimpleName": "SourceProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.TdProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.TdProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.TdProps",
      "classSimpleName": "TdProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.TextAreaProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.TextAreaProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.TextAreaProps",
      "classSimpleName": "TextAreaProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===) @ react4j.dom.proptypes.html.ThProps",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===) @ react4j.dom.proptypes.html.ThProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.ThProps",
      "classSimpleName": "ThProps",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.YesNo'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===)",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.YesNo",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "classQualifiedName": "react4j.dom.proptypes.html.HtmlGlobalFields",
      "classSimpleName": "HtmlGlobalFields",
      "elementKind": "parameter",
      "methodName": "translate",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'react4j.dom.proptypes.html.attributeTypes.YesNo' to 'java.lang.String'.",
    "newElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===java.lang.String===)",
    "oldElement": "parameter T react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::translate(===react4j.dom.proptypes.html.attributeTypes.YesNo===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.HtmlGlobalFields",
      "classSimpleName": "HtmlGlobalFields",
      "elementKind": "parameter",
      "methodName": "translate",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.html.attributeTypes.YesNo",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.AudioPreload'.",
    "element": "parameter react4j.dom.proptypes.html.AudioProps react4j.dom.proptypes.html.AudioProps::preLoad(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.AudioPreload",
      "classQualifiedName": "react4j.dom.proptypes.html.AudioProps",
      "classSimpleName": "AudioProps",
      "elementKind": "parameter",
      "methodName": "preLoad",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.ButtonType'.",
    "element": "parameter react4j.dom.proptypes.html.BtnProps react4j.dom.proptypes.html.BtnProps::type(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.ButtonType",
      "classQualifiedName": "react4j.dom.proptypes.html.BtnProps",
      "classSimpleName": "BtnProps",
      "elementKind": "parameter",
      "methodName": "type",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode'.",
    "newElement": "parameter react4j.dom.proptypes.html.CssProps react4j.dom.proptypes.html.CssProps::animationFillMode(===java.lang.String===)",
    "oldElement": "parameter react4j.dom.proptypes.html.CssProps react4j.dom.proptypes.html.CssProps::animationFillMode(===react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "annotationType": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "classQualifiedName": "react4j.dom.proptypes.html.CssProps",
      "classSimpleName": "CssProps",
      "elementKind": "parameter",
      "methodName": "animationFillMode",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode' to 'java.lang.String'.",
    "newElement": "parameter react4j.dom.proptypes.html.CssProps react4j.dom.proptypes.html.CssProps::animationFillMode(===java.lang.String===)",
    "oldElement": "parameter react4j.dom.proptypes.html.CssProps react4j.dom.proptypes.html.CssProps::animationFillMode(===react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.CssProps",
      "classSimpleName": "CssProps",
      "elementKind": "parameter",
      "methodName": "animationFillMode",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.cssPropertyTypes.AnimationFillMode",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.cssPropertyTypes.Visibility'.",
    "newElement": "parameter react4j.dom.proptypes.html.CssProps react4j.dom.proptypes.html.CssProps::visibility(===java.lang.String===)",
    "oldElement": "parameter react4j.dom.proptypes.html.CssProps react4j.dom.proptypes.html.CssProps::visibility(===react4j.dom.proptypes.cssPropertyTypes.Visibility===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "annotationType": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "classQualifiedName": "react4j.dom.proptypes.html.CssProps",
      "classSimpleName": "CssProps",
      "elementKind": "parameter",
      "methodName": "visibility",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'react4j.dom.proptypes.cssPropertyTypes.Visibility' to 'java.lang.String'.",
    "newElement": "parameter react4j.dom.proptypes.html.CssProps react4j.dom.proptypes.html.CssProps::visibility(===java.lang.String===)",
    "oldElement": "parameter react4j.dom.proptypes.html.CssProps react4j.dom.proptypes.html.CssProps::visibility(===react4j.dom.proptypes.cssPropertyTypes.Visibility===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "react4j.dom.proptypes.html.CssProps",
      "classSimpleName": "CssProps",
      "elementKind": "parameter",
      "methodName": "visibility",
      "newType": "java.lang.String",
      "oldType": "react4j.dom.proptypes.cssPropertyTypes.Visibility",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.OnOff'.",
    "element": "parameter react4j.dom.proptypes.html.FormProps react4j.dom.proptypes.html.FormProps::autoComplete(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.OnOff",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classQualifiedName": "react4j.dom.proptypes.html.FormProps",
      "classSimpleName": "FormProps",
      "elementKind": "parameter",
      "methodName": "autoComplete",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.FormMethod'.",
    "element": "parameter react4j.dom.proptypes.html.FormProps react4j.dom.proptypes.html.FormProps::formMethod(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.FormMethod",
      "classQualifiedName": "react4j.dom.proptypes.html.FormProps",
      "classSimpleName": "FormProps",
      "elementKind": "parameter",
      "methodName": "formMethod",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.Target'.",
    "element": "parameter react4j.dom.proptypes.html.FormProps react4j.dom.proptypes.html.FormProps::formTarget(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.Target",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.Target",
      "classQualifiedName": "react4j.dom.proptypes.html.FormProps",
      "classSimpleName": "FormProps",
      "elementKind": "parameter",
      "methodName": "formTarget",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.OnOff'.",
    "element": "parameter react4j.dom.proptypes.html.InputProps react4j.dom.proptypes.html.InputProps::autoComplete(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.OnOff",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classQualifiedName": "react4j.dom.proptypes.html.InputProps",
      "classSimpleName": "InputProps",
      "elementKind": "parameter",
      "methodName": "autoComplete",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter react4j.dom.proptypes.html.InputProps react4j.dom.proptypes.html.InputProps::type(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.InputProps",
      "classSimpleName": "InputProps",
      "elementKind": "parameter",
      "methodName": "type",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.OnOff'.",
    "element": "parameter react4j.dom.proptypes.html.TextAreaProps react4j.dom.proptypes.html.TextAreaProps::autoComplete(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.OnOff",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.OnOff",
      "classQualifiedName": "react4j.dom.proptypes.html.TextAreaProps",
      "classSimpleName": "TextAreaProps",
      "elementKind": "parameter",
      "methodName": "autoComplete",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.HeaderScope'.",
    "element": "parameter react4j.dom.proptypes.html.ThProps react4j.dom.proptypes.html.ThProps::scope(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.HeaderScope",
      "classQualifiedName": "react4j.dom.proptypes.html.ThProps",
      "classSimpleName": "ThProps",
      "elementKind": "parameter",
      "methodName": "scope",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.AnchorProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.AnchorProps",
      "classSimpleName": "AnchorProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.AudioProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.AudioProps",
      "classSimpleName": "AudioProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.BtnProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.BtnProps",
      "classSimpleName": "BtnProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.ColProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.ColProps",
      "classSimpleName": "ColProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.FormProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.FormProps",
      "classSimpleName": "FormProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.HtmlProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.HtmlProps",
      "classSimpleName": "HtmlProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.IFrameProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.IFrameProps",
      "classSimpleName": "IFrameProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.ImgProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.ImgProps",
      "classSimpleName": "ImgProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.InputProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.InputProps",
      "classSimpleName": "InputProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.LabelProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.LabelProps",
      "classSimpleName": "LabelProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.OptGroupProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.OptGroupProps",
      "classSimpleName": "OptGroupProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.OptionProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.OptionProps",
      "classSimpleName": "OptionProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.SelectProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.SelectProps",
      "classSimpleName": "SelectProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.SourceProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.SourceProps",
      "classSimpleName": "SourceProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.TdProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.TdProps",
      "classSimpleName": "TdProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.TextAreaProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.TextAreaProps",
      "classSimpleName": "TextAreaProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===) @ react4j.dom.proptypes.html.ThProps",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.ThProps",
      "classSimpleName": "ThProps",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'react4j.dom.proptypes.html.attributeTypes.InputType'.",
    "element": "parameter void react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T extends react4j.dom.proptypes.html.HtmlGlobalFields<T>>>::setType(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@react4j.dom.proptypes.html.attributeTypes.InputType",
      "annotationType": "react4j.dom.proptypes.html.attributeTypes.InputType",
      "classQualifiedName": "react4j.dom.proptypes.html.HtmlGlobalFields",
      "classSimpleName": "HtmlGlobalFields",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "react4j.dom.proptypes.html",
      "parameterIndex": "0"
    }
  }
]
